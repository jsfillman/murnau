name: Coverage Badge

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  coverage-badge:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run on main branch
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jackd2 jackd2-firewire libjack-jackd2-dev xvfb

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Start JACK (dummy driver for CI)
      run: |
        jackd -d dummy -r 48000 -p 512 &
        sleep 2

    - name: Run tests and generate coverage
      env:
        QT_QPA_PLATFORM: offscreen
        DISPLAY: ":99"
      run: |
        # Start virtual display for PyQt6 tests
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3
        # Run tests and capture coverage percentage
        pytest tests/ --cov=src --cov-report=term-missing | tee coverage_output.txt
        
        # Extract coverage percentage
        COVERAGE=$(grep "TOTAL" coverage_output.txt | awk '{print $4}' | sed 's/%//')
        echo "COVERAGE_PERCENT=$COVERAGE" >> $GITHUB_ENV
        
        # Determine badge color based on coverage
        if (( $(echo "$COVERAGE >= 80" | bc -l) )); then
          echo "BADGE_COLOR=brightgreen" >> $GITHUB_ENV
        elif (( $(echo "$COVERAGE >= 70" | bc -l) )); then
          echo "BADGE_COLOR=green" >> $GITHUB_ENV
        elif (( $(echo "$COVERAGE >= 60" | bc -l) )); then
          echo "BADGE_COLOR=yellow" >> $GITHUB_ENV
        elif (( $(echo "$COVERAGE >= 50" | bc -l) )); then
          echo "BADGE_COLOR=orange" >> $GITHUB_ENV
        else
          echo "BADGE_COLOR=red" >> $GITHUB_ENV
        fi

    - name: Create Coverage Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GITHUB_TOKEN }}
        gistID: YOUR_GIST_ID  # You'll need to create a gist and put the ID here
        filename: murnau-coverage.json
        label: Coverage
        message: ${{ env.COVERAGE_PERCENT }}%
        color: ${{ env.BADGE_COLOR }}
        style: for-the-badge
        logo: pytest